<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="false">

	<bean id="handlerExceptionResolver" class="com.lifeix.biz.common.exception.SpringGlobalExceptionResolver" />

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="5000000" />
	</bean>

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:conf/ds.conf</value>
				<value>classpath:conf/settings.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="abstractDataSource" abstract="true" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="checkoutTimeout" value="${jdbc.acquireCheckoutTimeout}" />
	</bean>
	
	
	
	<!-- 数据源 - content -->
	<bean id="contentDataSource" parent="abstractDataSource" lazy-init="true">
		<property name="jdbcUrl" value="${content.jdbc.url}" />
		<property name="user" value="${content.jdbc.username}" />
		<property name="password" value="${content.jdbc.password}" />
	</bean>

	<!-- memcache -->
	<bean id="abstractMemcacheService" abstract="true" class="com.lifeix.framework.memcache.impl.MemcacheServiceImpl" init-method="init" destroy-method="destory" >
	</bean>

	<bean id="memcacheService" parent="abstractMemcacheService">
		<property name="memcacheAddrs" value="${memcache.addrs}" />
		<property name="memcacheEnbale" value="${memcache.enable}" />
	</bean>
   
	<bean id="contentGoldSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="contentDataSource" />
		<property name="configLocation" value="classpath:conf/cbs-content-gold-sqlmap-config.xml" />
	</bean>
	
	<bean id="contentGoldSqlSession" class="org.mybatis.spring.SqlSessionTemplate" >
  		<constructor-arg index="0" ref="contentGoldSqlSessionFactory" />
	</bean>
	
	
	
	<context:component-scan base-package="com.lifeix.cbs.api"></context:component-scan>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="contentDataSource"></property>
	</bean>
	
	<!-- 启用事务注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>	
	
</beans>